#!/usr/bin/env python3

import base64
import datetime
import json
from os import listdir
from os.path import isfile, join
from pathlib import Path
from urllib.parse import quote as url_quote
import webbrowser

import click
import requests

dic_path = Path.home() / 'dic_lookups'
delete_last_line = "\033[1A[\033[2K"

IMAGE_SEARCH_URL = "https://www.bing.de/images/search?q="
# Pretend to be a browser or some servers won't allow image access (lookin' at you, Etsy!)
REQUEST_HEADERS = {'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.95 Safari/537.36'}
BASE64_JPG_PREFIX = '/9j/'

@click.group()
def tango():
    pass

@tango.command()
@click.argument('language')
@click.argument('headword')
@click.option('--add-data', prompt="Add additional data?", default=False)
def add(language, headword, add_data):
    entry = {}
    # Prompt so that user can edit headword; gender, plural, etc.
    entry['headword'] = click.prompt("Headword", default=headword).strip()
    # same format as date -u
    entry['created'] = datetime.datetime.now(datetime.timezone.utc).strftime("%a %b %d %H:%M:%S %Z %Y")

    if add_data:
        entry['definition'] = click.prompt("Enter definition").strip()
        entry['example'] = click.prompt("Enter example sentence").strip()
        entry['notes'] = click.prompt("Other notes").strip()

        # open browser in image search so user can select an image URL
        webbrowser.open(IMAGE_SEARCH_URL + url_quote(headword), new=2)
        # download the image and save as Base64 text
        image_url = click.prompt("Enter image URL").strip()
        if image_url:
            try:
                image_data = get_as_base64text(image_url)
                if image_data.startswith(BASE64_JPG_PREFIX):
                    entry['image_url'] = image_url
                    entry['image'] = image_data
                else:
                    raise ValueError('Image data was not JPG')
            except Exception as e:
                click.echo("Could not download image: " + str(e))
    output_file = dic_path / (language + '.txt')
    with open(output_file, 'a') as f:
        print(json.dumps(entry), file=f)

def get_as_base64text(url):
    # handle data URLs, which for example Google image search gives for image URLs
    data_url_prefix = 'data:image/jpeg;base64,'
    if url.startswith(data_url_prefix):
        return url[len(data_url_prefix) + 1:]
    return base64.b64encode(requests.get(url, headers = REQUEST_HEADERS).content).decode('ascii')

@tango.command()
@click.argument('language')
def study(language):
    """Review the tango for the selected language. If 'all', review all tango for all languages"""
    if language == 'all':
        dic_files = [dic_path / f for f in listdir(dic_path) if isfile(dic_path / f)]
    else:
        dic_files = [join(dic_path, language + '.txt')]
    for file in dic_files:
        with open(file) as f:
            for line in f:
                entry = json.loads(line.strip())
                click.echo(entry['headword'])
                input(">> press enter to go to next word")
                print(delete_last_line)

if __name__ == '__main__':
    tango()
